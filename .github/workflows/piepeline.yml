# 파일 경로: .github/workflows/pipeline.yml
name: Main CI/CD Pipeline
on:
  push: { branches: [ sh-dev, main ] }
  pull_request: { branches: [ main ] }

jobs:
  # ===============================================
  # JOB 1: CI (품질 검사 및 아티팩트 생성)
  # ===============================================
  build_and_test:
    name: 1. Build, Test & Create Artifact
    runs-on: self-hosted

    # [★ 최종 해결책 ★]
    # 이 job의 모든 steps는 아래에 명시된 Docker 컨테이너 안에서 실행됩니다.
    container:
      image: rasp5-ci:humble  # 우리가 로봇에 만들어 둔 바로 그 이미지!
      # 소스 코드를 마운트할 필요 없이, Actions가 자동으로 현재 작업공간을 연결해줍니다.

    steps:
      # 1. 컨테이너 안으로 소스 코드를 가져옵니다.
      - name: Checkout repository
        uses: actions/checkout@v4
        # checkout의 기본 경로는 컨테이너 안의 /__w/rasp5/rasp5가 됩니다.

      # 2. 이제 모든 명령어는 컨테이너 안에서 직접 실행됩니다!
      - name: Run Lint, Build, and Test
        # 더 이상 복잡한 'docker run' 구문이 필요 없습니다.
        run: |
          set -e
          source /opt/ros/humble/setup.bash
          # Actions가 checkout한 소스 코드가 있는 작업 공간으로 이동합니다.
          cd /__w/rasp5/rasp5
          
          echo '--- Installing ROS dependencies ---'
          rosdep install --from-paths src --ignore-src -r -y --rosdistro humble
          
          echo '--- [1/3] Linting code ---'
          colcon lint --packages-select rasp5
          
          echo '--- [2/3] Building workspace ---'
          colcon build --symlink-install --packages-up-to rasp5
          
          echo '--- [3/3] Running tests ---'
          colcon test --packages-select rasp5
          colcon test-result --verbose

      # 3. Artifact 업로드
      - name: Upload Source Code as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-code-artifact
          # 소스 코드가 있는 현재 작업 공간을 통째로 올립니다.
          path: .

  # ===============================================
  # JOB 2: CD (배포) - 이 부분은 변경 없음
  # ===============================================
  deploy:
    name: 2. Deploy to Picar
    runs-on: self-hosted
    needs: build_and_test
    if: success()
    steps:
      - name: Download Source Artifact
        uses: actions/download-artifact@v4
        with:
          name: source-code-artifact
      - name: Install Source Code and Build on Robot
        run: |
          rsync -a --delete ./ /home/car/rasp5/ && \
          cd /home/car/rasp5 && \
          source /opt/ros/humble/setup.bash && \
          colcon build --symlink-install
      - name: Restart ROS2 Service
        run: sudo systemctl restart picar_ros2.service
