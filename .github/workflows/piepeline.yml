# 파일 경로: .github/workflows/pipeline.yml
# 역할: Docker를 완전히 배제하고, 모든 작업을 로봇의 실제 OS 환경에서 수행하여 일관성을 보장합니다.

name: Main CI/CD Pipeline (Unified OS Environment)

on:
  push: { branches: [ sh-dev, main ] }
  pull_request: { branches: [ main ] }

jobs:
  # ===============================================
  # JOB 1: CI - 로봇 환경에서 코드 검증
  # ===============================================
  build_and_test:
    name: 1. Verify Code on Robot's OS
    runs-on: self-hosted

    steps:
      - name: Checkout repository to a temp directory
        uses: actions/checkout@v4

      - name: Run Lint, Build, and Test in a clean environment
        run: |
          set -e
          echo "--- Running CI directly on the host machine ---"
          source /opt/ros/humble/setup.bash
          
          # 현재 checkout된 임시 폴더에서 CI 작업을 수행합니다.
          rosdep install --from-paths src --ignore-src -r -y --rosdistro humble
          colcon lint --packages-select rasp5
          colcon build --symlink-install --packages-up-to rasp5
          colcon test --packages-select rasp5
          colcon test-result --verbose

  # ===============================================
  # JOB 2: CD - 실제 프로젝트 폴더에 배포
  # ===============================================
  deploy:
    name: 2. Deploy to Picar
    runs-on: self-hosted
    needs: build_and_test
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/sh-dev')

    steps:
      # CD는 더 이상 아티팩트에 의존하지 않습니다. 
      # CI의 성공을 믿고, 실제 프로젝트 폴더에서 직접 작업을 수행합니다.
      - name: Pull, Build, and Restart in Production Directory
        run: |
          set -e
          echo "--- Deploying to /home/car/rasp5 ---"
          cd /home/car/rasp5
          
          # 혹시 모를 로컬 변경사항을 버리고, 원격 브랜치와 강제로 동기화합니다.
          git fetch origin
          git reset --hard origin/${{ github.ref_name }}
          
          echo "--- Building project in production directory ---"
          source /opt/ros/humble/setup.bash
          # 실제 서비스에 사용될 빌드 결과물을 생성합니다.
          colcon build --symlink-install
          
          echo "--- Restarting ROS2 service ---"
          sudo systemctl restart picar_ros2.service
