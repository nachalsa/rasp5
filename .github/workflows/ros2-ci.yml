name: ROS2 CI for sh-dev branch

on:
  # 1. sh-dev 브랜치에 코드가 push 될 때 실행
  push:
    branches:
      - sh-dev
  
  # 2. 어떤 브랜치에서 sh-dev 브랜치로 Pull Request를 보낼 때 실행
  pull_request:
    branches:
      - sh-dev

jobs:
  build-and-test-on-arm64:
    runs-on: ubuntu-latest
    steps:
      # 0단계: 불필요한 기본 설치 파일들을 제거하여 디스크 공간 확보
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      # 1단계: 내 GitHub 저장소의 코드를 서버로 가져오기
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2단계: 서버가 ARM64 환경을 흉내낼 수 있도록 QEMU 설정
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3단계: 고급 Docker 빌드 기능 활성화
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # 4단계: 'Dockerfile'을 이용해 ARM64 테스트용 이미지 만들기
      - name: Build Docker image for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          tags: my-robot-test-image:latest
          push: false
          load: true

      # 5단계: [최종 실행] 완성된 이미지 컨테이너 안에서 코드 테스트하기
      - name: Run build and test inside the container
        run: |
          docker run --rm -v ./src:/ros2_ws/src my-robot-test-image:latest /bin/bash -c " \
            set -e && \
            source /opt/ros/humble/setup.bash && \
            cd /ros2_ws && \
            rosdep install --from-paths src --ignore-src -r -y --rosdistro humble && \
            colcon build --symlink-install --event-handlers console_direct+ && \
            colcon test \
          "
