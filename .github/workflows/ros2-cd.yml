# .github/workflows/cd.yml
# [수정됨] main 브랜치와 sh-dev 브랜치 모두에 반응하여 배포합니다.

name: CD - Deploy to Picar

# 언제 실행? -> main 또는 sh-dev 브랜치에 Push 될 때!
on:
  push:
    branches:
      - main
      - sh-dev  # 이 줄이 추가되었습니다.

jobs:
  deploy:
    name: Download Artifact and Deploy
    runs-on: self-hosted

    steps:
      # 1. 아티팩트 다운로드
      # 'dawidd6/action-download-artifact' 액션을 사용하면 특정 브랜치에서
      # 생성된 최신 아티팩트를 안정적으로 가져올 수 있습니다.
      - name: Download Artifact from Current Branch
        uses: dawidd6/action-download-artifact@v6
        with:
          # 어떤 워크플로우에서 생성된 아티팩트를 찾을 것인가?
          # 우리가 만든 CI 워크플로우의 '파일 이름'을 정확히 적어줍니다.
          workflow: ci.yml
          # 현재 이벤트가 발생한 바로 그 브랜치를 지정합니다.
          branch: ${{ github.ref_name }}
          # 아티팩트 이름
          name: ros2-build-artifact

      # 2. 다운로드한 아티팩트를 실제 프로젝트 폴더에 설치(덮어쓰기)
      - name: Install Artifact to Project Directory
        run: |
          echo "--- Installing artifact from '${{ github.ref_name }}' branch to /home/car/rasp5 ---"
          rsync -a --delete ./ /home/car/rasp5/

      # 3. systemd 서비스를 재시작하여 새로운 버전을 적용
      - name: Restart ROS2 Service
        run: |
          echo "--- Restarting picar_ros2.service ---"
          sudo systemctl restart picar_ros2.service

