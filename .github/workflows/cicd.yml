# 워크플로우의 이름
name: Autonomous Car CI

# 워크플로우를 트리거하는 이벤트 설정
on:
  # 모든 브랜치에 push가 발생했을 때 실행
  push:
    branches: [ '**' ]
  # 모든 브랜치로 pull request가 생성되었을 때 실행
  pull_request:
    branches: [ '**' ]

jobs:
  linting:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        # requirements.txt 파일의 정확한 경로를 지정합니다.
        run: pip install -r src/picar_pkg/requirements.txt

      - name: Lint with Pylint
        run: |
          pylint --disable=E0401,C0114,C0116,R0903 \
                 --rcfile=.pylintrc \
                 src/picar_pkg \
                 || true

  build-and-test:
    needs: linting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        # path를 지정하지 않아 프로젝트 루트에서 작업하도록 합니다.
        uses: actions/checkout@v4

      - name: Set up ROS 2
        # 이 액션이 ROS 환경 설정 및 apt-get update를 모두 처리합니다.
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Install Python dependencies
        # build-and-test 작업에 필요한 Python 패키지를 설치합니다.
        run: pip install -r src/picar_pkg/requirements.txt

      - name: Start virtual framebuffer
        # GUI 테스트를 위한 가상 디스플레이를 실행합니다.
        run: Xvfb :99 -screen 0 1024x768x16 &

      - name: Build and Run All Tests
        # 모든 GUI 출력을 가상 화면으로 보냅니다.
        env:
          DISPLAY: ":99"
        run: |
          # ROS 2 환경을 활성화합니다.
          source /opt/ros/humble/setup.bash
          
          # colcon으로 패키지를 빌드합니다.
          colcon build --packages-select picar_pkg
          
          # 빌드된 환경을 활성화하고 테스트를 실행합니다.
          source install/setup.bash
          colcon test --packages-select picar_pkg --event-handlers console_direct+
