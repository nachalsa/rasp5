# 워크플로우 이름
name: Autonomous Car CI (Optimized Cache)

on:
  push:
    branches: [ sh-dev ]
  pull_request:
    branches: [ main ]

jobs:
  # 1. 린팅 작업: (변경 없음)
  linting:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f src/picar_pkg/requirements.txt ]; then pip install -r src/picar_pkg/requirements.txt; fi
      - name: Generate Pylint Log File
        run: |
          find src -name "*.py" -print0 > python_files.list
          xargs -0 pylint --rcfile=./src/picar_pkg/.pylintrc \
            --disable=E0401,C0114,C0116,R0903 \
            < python_files.list > pylint-log.txt \
            || true
      - name: Upload Pylint Log
        uses: actions/upload-artifact@v4
        with:
          name: pylint-log
          path: pylint-log.txt

  # 2. 빌드 및 테스트 작업 (캐싱 및 설치 단계 수정)
  build-and-test:
    needs: linting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ★★★ 1. ROS 2 환경을 먼저 설정합니다. ★★★
      # 이 액션이 ROS 패키지 저장소 주소를 추가해주는 중요한 역할을 합니다.
      - name: Set up ROS 2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      # ★★★ 2. 캐시를 설정합니다. ★★★
      # 캐시 키는 변경하지 않아도 됩니다.
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            /var/lib/apt/lists # apt 목록
            ~/.cache/pip      # pip 캐시
            # /opt/ros/humble은 setup-ros가 관리하므로 캐시 대상에서 제외하는 것이 더 안정적일 수 있습니다.
          key: ${{ runner.os }}-ros-humble-deps-v4-${{ hashFiles('src/picar_pkg/package.xml', 'src/picar_pkg/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-ros-humble-deps-v4-

      # ★★★ 3. 의존성을 설치합니다. ★★★
      # `if` 조건문을 제거하여 캐시 유무와 상관없이 항상 실행되도록 단순화합니다.
      # apt-get update는 setup-ros가 이미 수행했을 수 있으나, 한번 더 해주는 것이 안전합니다.
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-rosdep xvfb
          sudo rosdep init || true
          rosdep update
          rosdep install --from-paths src --ignore-src -y -r --rosdistro humble
        env:
          DEBIAN_FRONTEND: noninteractive

      # ★★★ 이하 단계는 기존과 동일합니다 ★★★
      - name: Start virtual framebuffer
        run: Xvfb :99 -screen 0 1024x768x16 &

      - name: Build and Run All Tests
        env:
          DISPLAY: ":99"
        run: |
          source /opt/ros/humble/setup.bash
          echo "--- Starting build ---"
          colcon build --packages-select picar_pkg
          echo "--- Starting test ---"
          source install/setup.bash
          colcon test --packages-select picar_pkg --event-handlers console_direct+

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build/
            install/
            log/
