# 워크플로우의 이름
name: Autonomous Car CI (with Lint Report)

# 워크플로우를 트리거하는 이벤트 설정
on:
  push:
    branches: [ sh-dev ]
  pull_request:
    branches: [ main ]

jobs:
  # 1. 린팅 작업: 코드 스타일을 검사하고 보고서를 생성합니다.
  linting:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # ★★★★★ 이 단계가 핵심입니다 ★★★★★
      - name: Generate Pylint HTML Report
        run: |
          # Pylint를 실행하여 결과를 pylint-report.html 파일로 저장합니다.
          # output-format=html 옵션을 사용합니다.
          # || true 덕분에 점수가 낮아도 이 단계는 항상 성공합니다.
          pylint --disable=E0401,C0114,C0116,R0903 \
            --rcfile=.pylintrc \
            src/picar_pkg \
            --output-format=html > pylint-report.html \
            || true

      # ★★★★★ 생성된 보고서를 업로드합니다 ★★★★★
      - name: Upload Pylint Report
        # 위 단계가 항상 성공하므로, 보고서가 있다면 항상 업로드됩니다.
        uses: actions/upload-artifact@v4
        with:
          # 아티팩트 이름
          name: pylint-report
          # 업로드할 파일 경로
          path: pylint-report.html
          
  # 2. 빌드 및 테스트 작업 (이전과 동일)
  build-and-test:
    needs: linting # linting 작업은 항상 성공하므로, 이 작업은 항상 실행됩니다.
    runs-on: ubuntu-22.04
    steps:
      # (이하 내용은 이전과 동일하게 유지됩니다)
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up ROS 2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-rosdep xvfb
          sudo rosdep init || true
          rosdep update
          rosdep install --from-paths src --ignore-src -y -r --rosdistro humble

      - name: Start virtual framebuffer
        run: Xvfb :99 -screen 0 1024x768x16 &

      - name: Build and Run All Tests
        env:
          DISPLAY: ":99"
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --packages-select picar_pkg
          source install/setup.bash
          colcon test --packages-select picar_pkg --event-handlers console_direct+

      - name: Upload Build Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build/
            install/
            log/
